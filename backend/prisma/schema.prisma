// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/db-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
}

datasource postgres {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String        @id @default(uuid())
  email                  String        @unique
  name                   String?
  role                   Role          @default(USER)
  supervisedAppointments Appointment[] @relation("supervisor")
  appointments           Appointment[] @relation("customer")

  createdAt     DateTime?
  createdBy     String?
  createdByName String?
  updatedAt     DateTime?
  updatedBy     String?
  updatedByName String?
  deletedAt     DateTime?
  deletedBy     String?
  deletedByName String?
}

model Appointment {
  ///id do appointment
  id            String      @id @default(uuid())
  supervisor    User        @relation("supervisor", fields: [supervisorId], references: [id])
  supervisorId  String
  customer      User        @relation("customer", fields: [customerId], references: [id])
  customerId    String
  proceduresIds Procedure[]
  startsAt      DateTime
  endsAt        DateTime

  createdAt     DateTime?
  createdBy     String?
  createdByName String?
  updatedAt     DateTime?
  updatedBy     String?
  updatedByName String?
  deletedAt     DateTime?
  deletedBy     String?
  deletedByName String?
}

model Procedure {
  id           String        @id @default(uuid())
  name         String
  idProc       String
  appointments Appointment[]

  createdAt     DateTime?
  createdBy     String?
  createdByName String?
  updatedAt     DateTime?
  updatedBy     String?
  updatedByName String?
  deletedAt     DateTime?
  deletedBy     String?
  deletedByName String?
}

enum Role {
  USER
  SUPERVISOR
  CUSTOMER
}
