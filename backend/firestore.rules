rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

  	function jwCrc32c(input) {
    	return hashing.crc32c(input).toHexString();
    }

    match /testecrc/{userId} {
      allow read: if jwCrc32c(userId)=='1A';
    }

  	function isAdmin() {
      return request.auth!=null && request.auth.token.jw.type.adm;
    }
  	function rules() {
      return {
        "eventsExports": {
          "list": ["a","f"],
          "read": ["a","f"],
          "readOwn": ["a","b","f"],
          "write": ["a","f"],
          "listOwn": ["a","b","f"]
        },
        "billing": {
          "list": ["a","e","f"],
          "read": ["a","e","f"],
          "write": ["a","e","f"],
          "writeOwn": ["a"]
        },
        "companies": {
          "list": ["a","b"],
          "manageFilias": ["a","b"],
          "read": ["a","b"],
          "write": ["a","b"]
        },
        "healthInsurances": {
          "list": ["a","b","e","f"],
          "read": ["a","b","e","f"],
          "write": ["a","e","f"]
        },
        "surgeons": {
          "list": ["a","b","e","f"],
          "read": ["a","b","f"],
          "write": ["a","b","f"]
        },
        "batches": {
          "list": ["a","e","f"],
          "read": ["a","e","f"],
          "write": ["a","e","f"]
        },
        "events": {
          "list": ["a","e","f"],
          "read": ["a","e","f"],
          "readOwn": ["a","b","e","f","g"],
          "write": ["a","b","e","f","g"],
          "writeOwn": ["a","b","e","f","g"],
          "listOwn": ["a","b","e","f","g"]
        },
        "dashboard": {
          "list": ["a","e","f"],
          "read": ["a","e","f"],
          "readOwn": ["a","b","e","f"],
          "write": ["a","e","f"],
          "listOwn": ["a"]
        },
        "hospitals": {
          "list": ["a","b","e","f"],
          "read": ["a","f"],
          "write": ["a","f"]
        },
        "forms": {
          "list": ["a"],
          "read": ["a"],
          "write": ["a"]
        },
        "integrations": {
          "list": ["a","b"],
          "read": ["a","b"],
          "write": ["a","b"]
        },
        "schedule": {
          "list": ["a","c","d"],
          "read": ["a","c","d"],
          "write": ["a","c","d"],
          "listOwn": ["a","b","c"],
          "readOwn": ["a","b","c"],
          "writeOwn": ["a","b","c"],
          "manager": ["a","c"],
          "scheduler": ["a","c","d"],
          "managerDemand": ["a","c"],
          "managerSchedulerOff": ["a","c"],
          "managerSchedulerOffOwn": ["a","c"],
          "managerSlotCategory": ["a","c"],
          "managerWorkload": ["a","c"],
          "managerWorkloadOwn": ["a","c"]
        },
        "formsQA": {
          "list": ["a"],
          "read": ["a"],
          "write": ["a"],
          "readOwn": ["a","b"],
          "writeOwn": ["a","b"]
        },
        "ocr": {
          "list": ["a","b","f"],
          "read": ["a","b","f"],
          "write": ["a","b","f"]
        },
        "invoices": {
          "list": ["a","e","f"],
          "read": ["a","e","f"],
          "write": ["a","e","f"]
        },
        "patients": {
          "list": ["a","b","e","f"],
          "read": ["a","f"],
          "write": ["a","b","f"]
        },
        "anesthetists": {
          "list": ["a","b","c","d","e","f","g"],
          "read": ["a","c","f"],
          "write": ["a","f"],
          "readOwn": ["a","b","c","d","e","f"],
          "writeOwn": ["a","b","c","d","e","f"]
        }
      };
    }



    function companyCanById(companyId, module, action) {
      let cl = request.auth.token.jw;
      let test = rules();
      return companyId.size()==0 || (companyId.size()>0 && cl.c[jwCrc32c(companyId)].hasAny(test[module][action]));
    }
    function companyCan(module, action) {
      let cl = request.auth.token.jw;
      let test = rules();
      return (resource.data.companyId.size()>0 &&
        (
          cl.c[jwCrc32c(resource.data.companyId)].hasAny(test[module][action]) ||
          (
            resource.data.matrizId.size()>0 &&
            cl.c[jwCrc32c(resource.data.matrizId)].hasAny(test[module][action])
          )
        ))
        || resource==null;

    }
    function companyCan2(module, action, action2) {
      let cl = request.auth.token.jw;
      let test = rules();
      return (resource.data.companyId.size()>0 &&
        (
          cl.c[jwCrc32c(resource.data.companyId)].hasAny(test[module][action]) ||
          (
            resource.data.matrizId.size()>0 &&
            cl.c[jwCrc32c(resource.data.matrizId)].hasAny(test[module][action])
          ) ||
          cl.c[jwCrc32c(resource.data.companyId)].hasAny(test[module][action2]) ||
          (
            resource.data.matrizId.size()>0 &&
            cl.c[jwCrc32c(resource.data.matrizId)].hasAny(test[module][action2])
          )
        ))
        || resource==null;
    }
    function companyCanOwnAnesthetistId(module, action) {
      let cl = request.auth.token.jw;
      let test = rules();
      return resource.data.companyId.size()>0 &&
        resource.data.anesthetistId==request.auth.uid &&
        (
          cl.c[jwCrc32c(resource.data.companyId)].hasAny(test[module][action]) ||
          (
            resource.data.matrizId.size()>0 &&
            cl.c[jwCrc32c(resource.data.matrizId)].hasAny(test[module][action])
          )
        );
    }
    function companyCanReadBase() {
      let cl = request.auth.token.jw;
      return cl.c[jwCrc32c(resource.data.companyId)].size()>=0;
     // return cl.c[jwCrc32c(resource.data.companyId)] is list;
    }
    function companyCanReadBaseArrayIds() {
      return true; // TODO
     // let cl = request.auth.token.jw;
     // return resource.data.companyIds.hasAny(cl.c.keys());
    }

    // match /{document=**} {
    //   allow read, write: if true;
    // }





    // request.resource


    match /usertoken/{userId} {
      allow read: if request.auth.uid==userId;
      allow write: if request.auth.uid==userId;
    }

    match /company_cirurgioes/{documentId} {
      allow read: if companyCan2('surgeons', 'read', 'list');
      allow write: if companyCan('surgeons', 'write');
    }
    match /company_users/{documentId} {
      allow read: if companyCan2('anesthetists', 'read', 'list') || request.auth.uid==documentId;
    //  allow write: if companyCan('anesthetists', 'write') || request.auth.uid==documentId;
    	allow write: if true;
    }
    match /healthInsurances/{documentId} {
      allow read: if companyCan2('healthInsurances', 'read', 'list');
      allow write: if companyCan('healthInsurances', 'write');
    }
    match /historyHealthInsurances/{documentId} {
      allow read: if companyCan2('healthInsurances', 'read', 'list');
    }
    match /company_hospitais/{documentId} {
      allow read: if companyCan2('hospitals', 'read', 'list');
      allow write: if companyCan('hospitals', 'write');
    }
    match /guidesOcr/{documentId} {
      allow read: if companyCan2('ocr', 'read', 'list');
      allow write: if companyCan('ocr', 'write');
    }
    match /eventOcrCommunication/{documentId} {
      allow read: if companyCan2('ocr', 'read', 'list');
      allow write: if companyCan('ocr', 'write');
    }
    match /batches/{documentId} {
      allow read: if companyCan2('batches', 'read', 'list');
      allow write: if companyCan('batches', 'write');
    }
    match /invoices/{documentId} {
      allow read: if companyCan2('invoices', 'read', 'list');
      allow write: if companyCan('invoices', 'write');
    }
    match /patients/{documentId} {
      allow read: if companyCan2('patients', 'read', 'list');
      allow write: if companyCan('patients', 'write');
    }


    match /monthlyCount/{documentId} {
      allow read: if companyCan2('dashboard', 'read', 'list');
    }
    match /monthlyCountAnesthetist/{documentId} {
      allow read: if companyCan2('dashboard', 'read', 'list') || companyCanOwnAnesthetistId('dashboard', 'readOwn');
    }



    match /events/{documentId} {
      allow read: if companyCan2('events', 'read', 'list') || companyCanOwnAnesthetistId('events', 'readOwn');
      allow write: if companyCan('events', 'write') || companyCanOwnAnesthetistId('events', 'writeOwn');
    }
    match /historyEvents/{documentId} {
      allow read: if companyCan2('events', 'read', 'list') || companyCanOwnAnesthetistId('events', 'readOwn');
    }
    match /eventsResumeFetched/{documentId} {
      allow read: if companyCan2('events', 'read', 'list') || companyCanOwnAnesthetistId('events', 'readOwn');
    }
    match /integrationsEvents/{documentId} {
      allow read: if companyCan2('events', 'read', 'list') || companyCanOwnAnesthetistId('events', 'readOwn');
      allow write: if companyCan('events', 'write') || companyCanOwnAnesthetistId('events', 'writeOwn');
    }
    match /xlsxDownload/{documentId} {
      allow read: if companyCan2('eventsExports', 'read', 'list') || companyCanOwnAnesthetistId('eventsExports', 'readOwn');
    }
    match /xmlDownload/{documentId} {
      allow read: if companyCan2('eventsExports', 'read', 'list') || companyCanOwnAnesthetistId('eventsExports', 'readOwn');
    }


    match /institutions/{documentId} {
      allow read: if companyCan2('integrations', 'read', 'list');
      allow write: if companyCan('integrations', 'write');
    }
    match /integrationsMirror/{documentId} {
      allow read: if companyCan2('integrations', 'read', 'list');
    }




    match /companies/{companyId} {
      allow read: if companyCan2('companies', 'read', 'list');
      allow write: if companyCan('companies', 'write');
      allow read: if companyCanById(resource.data.matrizId,'companies', 'manageFilias');
      allow write: if companyCanById(resource.data.matrizId,'companies', 'manageFilias');
      allow read: if request.auth.uid in resource.data.userIds;
    //  allow write: if request.auth.uid==userId;
    }


    match /cbhpm/{documentId} {
      allow read: if request.auth != null;
    }
    match /especialidades/{documentId} {
      allow read: if request.auth != null;
    }
    match /procedimentos/{documentId} {
      allow read: if request.auth != null;
    }
    match /resumesCuteReason/{documentId} {
      allow read: if request.auth != null;
    }
    match /resumesProcedures/{documentId} {
      allow read: if request.auth != null;
    }
    match /cuteReason/{documentId} {
      allow read: if request.auth != null;
    }
    match /accessActions/{documentId} {
      allow read: if request.auth != null;
    }
    match /accessModules/{documentId} {
      allow read: if request.auth != null;
    }
    match /accessProfiles/{documentId} {
      allow read: if request.auth != null;
    }
    match /proceduresParticular/{documentId} {
      allow read: if request.auth != null;
    }
    match /xmlVersions/{documentId} {
      allow read: if request.auth != null;
    }



    match /config/{documentId} {
      allow read: if true;
    }
    match /adminUsersPublicMirror/{documentId} {
      allow read: if true;
    }
    match /blog/{documentId} {
      allow read: if true;
    }
    match /blogCategories/{documentId} {
      allow read: if true;
    }
    match /faqs/{documentId} {
      allow read: if true;
    }
    match /faqsCategories/{documentId} {
      allow read: if true;
    }
    match /taxes/{documentId} {
      allow read: if companyCanReadBase();
      allow write: if companyCanReadBase();
    }
    match /forms/{documentId} {
      allow read: if true;
      allow write: if true;
    }
    match /formsCategories/{documentId} {
      allow read: if true;
      allow write: if true;
    }




    // Base Company utilizado para as caches, o client ainda vai validar usando as rules
    match /company_cirurgioes/{documentId} {
      allow read: if companyCanReadBase();
    }
    match /company_hospitais/{documentId} {
      allow read: if companyCanReadBase();
    }
    match /company_cirurgioes/{documentId} {
      allow read: if companyCanReadBase();
    }
    match /healthInsurances/{documentId} {
      allow read: if companyCanReadBase();
    }
    match /company_users/{documentId} {
      allow read: if companyCanReadBaseArrayIds(); // && resource.data.is_anestesista==true;
    }

    match /invoices/{documentId} {
      allow read: if companyCanReadBase();
    }
    match /batches/{documentId} {
      allow read: if companyCanReadBase();
    }


    match /{document=**} {
      allow write: if isAdmin();
      allow read: if isAdmin();
    }


    // TMP
    match /{document=**} {
      allow write: if true;
      allow read: if true;
    }
    // END TMP

  }
}














